name: Build Installers
on:
  push:
    paths:
      - ".github/workflows/build-installers.yml"
      - "version.properties"
      - "bluej/build.gradle"
      - "greenfoot/build.gradle"
      - "bluej/package/build.xml"
      - "bluej/package/greenfoot-build.xml"
      - ".env"
  workflow_dispatch:
jobs:
  Build-Windows-Installers:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.java_version }}
          java-package: jdk
          architecture: x64
      - name: Install choco packages
        run: |
          choco install wixtoolset -r --no-progress
          choco install msys2 -r --no-progress
          choco install mingw -r --no-progress
          choco install sed -r --no-progress
          choco install wget -r --no-progress
          choco install ant -r --no-progress
      - name: Check install locations
        run: |
          dir C:/ProgramData/mingw64/mingw64/bin
          dir 'C:/Program Files/'
          dir 'C:/Program Files (x86)/'
          dir 'C:/Program Files (x86)/WiX Toolset v3.14/bin'
      - name: Set tool locations
        run: |
          cd ${{ github.workspace }}
          $propfile = 'tools.properties'
          $java_home_forward = $env:JAVA_HOME -replace '\\', '/'
          $workspace_forward = $PWD -replace '\\', '/'
          (Get-Content $propfile) -replace 'mingw_root=.*', "mingw_root=C:/ProgramData/mingw64/mingw64" | Set-Content $propfile
          (Get-Content $propfile) -replace 'wix_bin=.*', "wix_bin=C:/Program Files (x86)/WiX Toolset v3.14/bin" | Set-Content $propfile
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build
        run: ./gradlew :bluej:packageBlueJWindows --info --stacktrace --no-daemon
      - name: Archive BlueJ Windows installers
        uses: actions/upload-artifact@v4
        with:
          name: bluej-installers-windows
          path: |
            bluej/package/BlueJ-windows*.msi
            bluej/package/BlueJ-windows*.zip

  Build-Ubuntu-Installers:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.java_version }}
          java-package: jdk
          architecture: x64
      - name: Install packages
        run: |
          sudo apt install fakeroot
      - name: Check install locations
        run: |
          ls $JAVA_HOME
      - name: Adjust JavaFX version on Linux
        run: |
          find . -name 'build.gradle' -exec sed -i '/javafx_version_setting/c\version = '\''20.0.2'\''' {} +
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build
        run: ./gradlew :bluej:packageBlueJLinux --info --stacktrace --no-daemon
      - name: Archive BlueJ Ubuntu installers
        uses: actions/upload-artifact@v4
        with:
          name: bluej-installers-other
          path: |
            bluej/package/BlueJ-linux*.deb
            bluej/package/BlueJ-generic*.jar

  Build-Mac-Installers-Intel:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.java_version }}
          java-package: jdk
          architecture: x64
      - name: Check install locations
        run: |
          ls $JAVA_HOME
      - name: Run setup
        run: |
          brew install grep
          brew install imagemagick
          brew install python@3.9
          export PATH=/usr/local/opt/python@3.9/libexec/bin:$PATH
          brew install npm && npm install -g appdmg
          cd ${{ github.workspace }}
          echo 'ant_exe=ant' > tools.properties
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build
        run: ./gradlew :bluej:packageBlueJMacIntel --info --stacktrace --no-daemon
      - name: Archive BlueJ Mac installers
        uses: actions/upload-artifact@v4
        with:
          name: bluej-installers-mac-intel
          path: |
            bluej/package/BlueJ-mac*.zip

  Build-Mac-Installers-Aarch:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.java_version }}
          java-package: jdk
          architecture: aarch64
      - name: Check install locations
        run: |
          ls $JAVA_HOME
      - name: Run setup
        run: |
          brew install grep
          brew install imagemagick
          brew install python@3.9
          export PATH=/usr/local/opt/python@3.9/libexec/bin:$PATH
          brew install npm && npm install -g appdmg
          cd ${{ github.workspace }}
          echo 'ant_exe=ant' > tools.properties
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build
        run: ./gradlew :bluej:packageBlueJMacAarch --info --stacktrace --no-daemon
      - name: Archive BlueJ Mac installers
        uses: actions/upload-artifact@v4
        with:
          name: bluej-installers-mac-aarch
          path: |
            bluej/package/BlueJ-mac*.zip
